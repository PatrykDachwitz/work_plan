<?php

namespace Tests\Feature\Api;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class UserTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        User::factory()->create([
            'id' => 1
        ]);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testChangeRole()
    {
        $response = $this->put(route('user.change.role', [
            'id' => 1
        ]), [
            'role_id' => 3
        ]);

        $this->assertDatabaseHas('users', [
            'id' => 1,
            'role_id' => 3
        ]);

        $response->assertStatus(200);
    }

    public function testChangeGroup()
    {
        $response = $this->put(route('user.change.group', [
            'id' => 1
        ]), [
            'group_id' => 3
        ]);

        $this->assertDatabaseHas('users', [
            'id' => 1,
            'group_id' => 3
        ]);

        $response->assertStatus(200);
    }

    public function testChangeRoleValidId()
    {
        $response = $this->put(route('user.change.role', [
            'id' => 1
        ]), [
            'role_id' => "We"
        ]);

        $response->assertStatus(302)
        ->assertSessionHasErrors([
            'role_id'
        ]);
    }

    public function testChangeGroupValidId()
    {
        $response = $this->put(route('user.change.group', [
            'id' => 1
        ]), [
            'group_id' => "We"
        ]);

        $response->assertStatus(302)
            ->assertSessionHasErrors([
                'group_id'
            ]);
    }
}
